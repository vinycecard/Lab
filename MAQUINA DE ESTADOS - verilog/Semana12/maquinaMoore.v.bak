module maquinaMoore (SW, CLOCK_50, HEX0);

input CLOCK_50;
input [17:15]SW;
output [0:6]HEX0;
wire clock;
reg [3:0]z;

divisor div(.CLK(CLOCK_50), .S(clock));

wire [0:1]w;
              //
assign w[0:1] = SW[17:16];
reg [3:0] y, Y;
parameter A = 4'b0000, B= 4'b0001, C= 4'b0010, D=4'b0011, E=4'b0100;
parameter F= 4'b0101, G= 4'b0110, H=4'b0111, I=4'b1000, J=4'b1001, K=4'b1111;

always @(w or y)// define o Circ. Comb. Prox. Est.
begin
    case (y)
    A:  if (w[0]==0 && w[1]==0 || SW[15])
            Y=A;
        else if(w[0]==1 && w[1]==0) 
            Y=B;
        else if(w[0]==0 && w[1]==1)
            Y=I;
        else 
            Y=J;
    
    B:  if (w[0]==0 && w[1]==0) 
            Y=B;
        else if(w[0]==1 && w[1]==0) 
            Y=C;
        else if(w[0]==0 && w[1]==1) 
            Y=A;
        else 
            Y=J;
    
    C:  if (w[0]==0 && w[1]==0) 
            Y=C;
        else if(w[0]==1 && w[1]==0) 
            Y=D;
        else if(w[0]==0 && w[1]==1) 
            Y=B;
        else 
            Y=J;
    
    D:  if (w[0]==0 && w[1]==0) 
            Y=D;
        else if(w[0]==1 && w[1]==0) 
            Y=E;
        else if(w[0]==0 && w[1]==1) 
            Y=C;
        else 
            Y=J;
    
    E:  if (w[0]==0 && w[1]==0) 
            Y=E;
        else if(w[0]==1 && w[1]==0) 
            Y=F;
        else if(w[0]==0 && w[1]==1) 
            Y=D;
        else 
            Y=J;
    
    F:  if (w[0]==0 && w[1]==0) 
            Y=F;
        else if(w[0]==1 && w[1]==0) 
            Y=G;
        else if(w[0]==0 && w[1]==1) 
            Y=E;
        else 
            Y=J;
    
    G:  if (w[0]==0 && w[1]==0) 
            Y=G;
        else if(w[0]==1 && w[1]==0) 
            Y=H;
        else if(w[0]==0 && w[1]==1) 
            Y=F;
        else 
            Y=J;
    
    H:  if (w[0]==0 && w[1]==0) 
            Y=H;
        else if(w[0]==1 && w[1]==0) 
            Y=I;
        else if(w[0]==0 && w[1]==1) 
            Y=G;
        else 
            Y=J;
    
    I:  if (w[0]==0 && w[1]==0) 
            Y=I;
        else if(w[0]==1 && w[1]==0) 
            Y=A;
        else if(w[0]==0 && w[1]==1) 
            Y=H;
        else 
            Y=J;
    
    J:	if (w[0]==1 && w[1]==1) 
            Y=J;
        else
            Y=A;
    		
    endcase
end
always @(posedge clock or posedge SW[15])
begin
    if (SW[15]==1)
        y <= A;
    else
        y <= Y;
end

always@(Y)
begin
    case(Y)
        A: z = D;
        B: z = F;
        C: z = H;
        D: z = D;
        E: z = J;
        F: z = A;
        G: z = C;
        H: z = F;
        I: z = I;
        J: z = K;
    endcase
end
    

decodificador_BCD bcd(.SW(z), .HEX0(HEX0));

endmodule